<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="manager.dao.ManagerDAO">

    <!-- 가입 회원 수 -->
    <select id="getTodayMember" resultType="java.util.Map">
        SELECT DATE(hiredate) AS date, COUNT(*) AS signups
        FROM user
        WHERE hiredate >= DATE_SUB(CURDATE(), INTERVAL 6 DAY)
        GROUP BY DATE(hiredate)
        ORDER BY DATE(hiredate) DESC;
    </select>

    <select id="boardUpload" resultType="java.util.Map">
        SELECT DATE(DATE) AS date, COUNT(*) AS upload
        FROM board
        WHERE DATE >= DATE_SUB(CURDATE(), INTERVAL 6 DAY)
        GROUP BY DATE(DATE)
        ORDER BY DATE(DATE) DESC;
    </select>

    <select id="getUserList" parameterType="int" resultType="manager.bean.ManagerDTO">
        select * from user
        LEFT JOIN reportUser
        ON user.userId = reportUser.userId
        ORDER BY reportCnt DESC
    </select>

    <select id="getTotalA" resultType="int">
        select count(*) from user
    </select>

    <select id="getTotalA2" parameterType="java.util.Map" resultType="int">
        select count(*) from user
        where ${input} like concat('%', #{value}, '%');
    </select>

    <select id="getUserList2" parameterType="java.util.Map" resultType="manager.bean.ManagerDTO">
        select * from user
        LEFT JOIN reportUser
        ON user.userId = reportUser.userId
        where ${input} like concat('%', #{value}, '%')
        ORDER BY reportCnt DESC
    </select>

    <select id="pichart1" resultType="java.util.Map">
        SELECT projectType, COUNT(*) AS projectType_count
        FROM board
        WHERE DATE >= DATE_SUB(CURDATE(), INTERVAL 6 DAY)
        GROUP BY projectType
        ORDER BY projectType_count DESC

    </select>

    <select id="pichart2" resultType="java.util.Map">
        SELECT projectField, COUNT(*) AS projectField_count
        FROM board
        WHERE DATE >= DATE_SUB(CURDATE(), INTERVAL 6 DAY)
        GROUP BY projectField
        ORDER BY projectField_count DESC
    </select>

    <insert id="registerNotice" parameterType="map">
        insert into notice(title, content) values(#{title}, #{content})
    </insert>

    <select id="getNotice" resultType="NoticeDTO">
        select * from notice
    </select>

    <delete id="notiDelete" parameterType="int">
        delete from notice where noti_id=#{id}
    </delete>

    <select id="getReport" resultType="manager.bean.ManagerReport">
        select * from report
    </select>

    <select id="reportSelect" parameterType="int" resultType="manager.bean.ManagerReport">
        select * from report where reportNum = #{reportNum}
    </select>
    <!--  + `<option value="2">처리 중</option>`
                        + `<option value="3">이상 없음</option>`
                        + `<option value="4">댓글 삭제</option>`
                        + `<option value="5">게시물 삭제</option>`
                        + `<option value="6">회원 경고</option>`
                        + `<option value="7">회원 추방</option>`-->
    <update id="reportStatus" parameterType="map">
        update report
        set status = #{status}
        where reportNum = #{reportNum};
    </update>
    <update id="reportUser" parameterType="map">
        <choose>
            <when test="userId != null">
                update reportUser
                set reportCnt = (
                select reportCnt + 1
                from reportUser
                where userId = (
                select targetId
                from report
                where reportNum = #{reportNum}
                )
                );
            </when>
            <otherwise>
                insert into reportUser (userId, reportCnt)
                select targetId, 1
                from report
                where reportNum = #{reportNum};
            </otherwise>
        </choose>
    </update>

    <delete id="userBan" parameterType="map">
        delete from user where userId=#{userId}
    </delete>
    <insert id="userBanInsert" parameterType="map">

        insert into userBan (userId, name, EMAIL, PHONE) values(#{userId}, #{name}, #{email}, #{phone})

    </insert>
</mapper>
